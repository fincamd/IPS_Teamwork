## Supplier orders
SQL_FIND_SUPPLIER_ORDER_BY_ID=select * from tpedidos_proveedor where id = ?;
SQL_FIND_ALL_SUPPLIER_ORDERS=select * from tpedidos_proveedor;
SQL_MARK_ORDER_AS_RECEIVED=update tpedidos_proveedor set estado = 'RECIBIDO' where id = ?;
SQL_GET_BIGGEST_ID_SUPPLIER_ORDERS=SELECT ID FROM tpedidos_proveedor ORDER BY ID DESC LIMIT 1;
SQL_CREATE_NEW_DEFAULT_STOCK_ORDER=INSERT INTO tpedidos_proveedor (ID, estado, fecha) values (?,?,?);
SQL_CREATE_NEW_ORDER_FOR_SALE_STOCK=INSERT INTO tpedidos_proveedor (ID, estado, fecha, id_venta) values (?,?,?,?);
SQL_FIND_ASSIGNED_SALE_ID=select id_venta from tpedidos_proveedor where id=?;

## Ordered products to supplier
SQL_COUNT_PRODUCTS_IN_SUPPLIER_ORDER=select id_producto, cantidad from tsolicitados where id_pedido_proveedor = ?;
SQL_ADD_PRODUCTS_TO_ORDER=INSERT INTO tsolicitados (ID_PRODUCTO, ID_PEDIDO_PROVEEDOR, CANTIDAD, CUANTIA) values (?,?,?,?);
SQL_GET_ORDERED_PRODUCT_PRICE=Select CUANTIA from TSOLICITADOS WHERE ID_PEDIDO_PROVEEDOR=? AND ID_PRODUCTO=?;

## Products
SQL_FIND_PRODUCT_BY_ID=select * from tproductos where ID = ?;
SQL_FIND_ALL_PRODUCTS=select * from tproductos;
SQL_GET_COLUMN_NAMES_FOR_BREAKDOWN=select nombre, precio_proveedor, categoria from tproductos;
SQL_GET_STOCK_BY_ID=select cantidad_almacen from tproductos where id=?;
SQL_GET_SUPPLIER_PRICE_BY_ID=select PRECIO_PROVEEDOR from tproductos where id=?;
SQL_ADD_PRODUCTS_TO_STOREHOUSE=update tproductos set cantidad_almacen = cantidad_almacen + ? where id = ?;
SQL_REMOVE_FROM_STORAGE = update tproductos set cantidad_almacen = ? where id=?;
SQL_UPDATE_PRODUCT=UPDATE TPRODUCTOS SET NOMBRE = ?, PRECIO_PUBLICO = ?, PRECIO_PROVEEDOR = ?, PRECIO_ORIGINAL = ?, CATEGORIA = ?, CANTIDAD_ALMACEN = ? WHERE ID = ?;

## Budgets
SQL_GET_BIGGEST_ID_BUDGETS=SELECT ID FROM tpresupuestos ORDER BY ID DESC LIMIT 1;
SQL_INSERT_BUDGET_DEFAULT_STATE=INSERT INTO tpresupuestos(ID, ESTADO, FECHA_CREACION, FECHA_CADUCIDAD, ID_CLIENTE) VALUES(?, ?, ?, ?, ?);
SQL_GET_PRICES=SELECT SUM(p.PRECIO_PUBLICO) AS total FROM TPRODUCTOS p, TPRESUPUESTADOS pp WHERE pp.ID_presupuesto = ? and p.ID=pp.ID_PRODUCTO;
SQL_SET_STATE_ACCEPTED=UPDATE tpresupuestos SET ESTADO = 'ACEPTADO' WHERE ID = ?;
SQL_GET_PENDING_BUDGETS=SELECT p.ID, p.FECHA_CREACION, p.FECHA_CADUCIDAD, c.NOMBRE FROM tpresupuestos p, tclientes c WHERE p.ID_CLIENTE NOT NULL AND ESTADO='NO ACEPTADO' AND p.ID_CLIENTE=c.ID;
SQL_FIND_BUDGET_BY_ID=SELECT * FROM tpresupuestos WHERE ID = ?;
SQL_FIND_ALL_BUDGETS=SELECT * FROM tpresupuestos;

## Sales
SQL_ADD_SALE=INSERT INTO TVENTAS (ID,ID_presupuesto,fecha,ID_CLIENTE) VALUES (?, ?,?,?);
SQL_GET_NEW_ID=SELECT MAX(ID) FROM TVENTAS;
SQL_ADD_MONTAJE_PRICE=UPDATE TVENTAS SET CUANTIA = CUANTIA + ? WHERE ID = ? ;
SQL_FIND_PRODUCTS_TO_ADD=SELECT * FROM TPRESUPUESTADOS WHERE ID_PRESUPUESTO = ?;
SQL_FIND_SALE_BY_ID=select * from tventas where id = ?;
SQL_FIND_SALE_BY_CLIENT_AND_BUDGET_IDS=select id from tventas where id_cliente = ? and id_presupuesto = ?;
SQL_FIND_ALL_SALES=select * from tventas;
SQL_GET_TOTAL_EARN_FOR_MONTH_YEAR = select sum(vp.cuantia*vp.cantidad) total from tventa_productos vp, tventas v where vp.id_venta=v.id and v.fecha like ?;
SQL_ADD_DIRECT_SALE=INSERT INTO TVENTAS (ID,fecha,ID_METODO_DE_PAGO) VALUES (?,?,?);

##Transportation
SQL_FIND_ALL_TRANSPORTATION=SELECT * FROM TTRANSPORTES;
SQL_ADD_TRANSPORTATION=INSERT INTO TTRANSPORTES (ID,ID_VENTA, FECHA_ENTREGA,HORA_ENTREGA,SOLICITA_MONTAJE) VALUES (?,?,?,?,'NO');
SQL_ADD_BLOCKED_TRANSPORTATION=INSERT INTO TTRANSPORTES (ID,ID_VENTA, FECHA_ENTREGA,HORA_ENTREGA,SOLICITA_MONTAJE, ESTADO) VALUES (?,?,?,?,'NO',?);
SQL_ADD_MONTAJE=UPDATE TTRANSPORTES SET SOLICITA_MONTAJE = 'SI' WHERE ID_VENTA = ?;
SQL_SET_TRANSPORTATION_DATE=UPDATE TTRANSPORTES SET FECHA_ENTREGA = ? WHERE ID_VENTA = ?;
SQL_SET_TRANSPORTATION_TIME=UPDATE TTRANSPORTES SET HORA_ENTREGA = ? WHERE ID_VENTA = ?;
SQL_FIND_TRANSPORTATION_BY_SALE_ID=select * from ttransportes where id_venta = ?;
SQL_FIND_HOURS_FOR_A_DAY = SELECT HORA_ENTREGA FROM TTRANSPORTES WHERE FECHA_ENTREGA = ?;
SQL_GET_NEW_TRANSPORTATION_ID=SELECT MAX(ID) FROM TTRANSPORTES;
SQL_UPDATE_TRANSPORTATION=UPDATE TTRANSPORTES SET ID_VENTA = ?, SOLICITA_MONTAJE = ?, ESTADO = ?, FECHA_ENTREGA = ?, HORA_ENTREGA = ? WHERE ID = ?;
SQL_FIND_BY_ID_TRANSPORTATION=SELECT * FROM TTRANSPORTES WHERE ID = ?;

## Budgeted products
SQL_FIND_PRODUCT_ID_IN_BUDGET_BY_ID=select id_producto from tpresupuestados where id_presupuesto = ?;
SQL_FIND_PRODUCTS_IN_BUDGET_BY_ID=select * from tpresupuestados where id_presupuesto = ?;
SQL_ASSIGN_PRODUCT_TO_BUDGET=INSERT INTO TPRESUPUESTADOS VALUES(?, ?, ?, ?);
SQL_FIND_ALL_BUDGETPRODUCTS=SELECT * FROM TPRESUPUESTADOS;
SQL_UPDATE_BUDGETPRODUCT=UPDATE TPRESUPUESTADOS SET CANTIDAD = ?, CUANTIA = ? WHERE ID_PRESUPUESTO = ? AND ID_PRODUCTO = ?;
SQL_GET_TOTAL_SPEND_FOR_MONTH_YEAR=select sum(s.cuantia*s.cantidad) total from tsolicitados s, tpedidos_proveedor p where s.id_pedido_proveedor=p.id and p.fecha like ?;

## Clients
SQL_FIND_CLIENT_BY_NAME_AND_DNI=select id from tclientes where nombre = ? and dni = ?;
SQL_FIND_CLIENT_BY_ID=select * from tclientes where id = ?;
SQL_GET_BIGGEST_ID_CLIENTS=SELECT ID FROM TCLIENTES ORDER BY ID DESC LIMIT 1;
SQL_INSERT_CLIENT=INSERT INTO TCLIENTES(ID, DNI, NOMBRE, DIRECCION, CP, TELEFONO) VALUES(?, ?, ?, ?, ?, ?);

## Product_Sale
SQL_FIND_PRODUCTS_BY_SALE_ID=select * from tventa_productos where id_venta = ?;
SQL_FIND_ALL_CLIENTS=SELECT * FROM TCLIENTES;
SQL_RETURN_PRODUCTS_TO_STOREHOUSE=update tproductos set CANTIDAD_ALMACEN = CANTIDAD_ALMACEN + ? where id = ?;
SQL_ADD_VENTA_PRODUCTO = INSERT INTO TVENTA_PRODUCTOS(ID_VENTA, ID_PRODUCTO, CANTIDAD,CUANTIA) VALUES(?, ?, ?,?);
SQL_FIND_PRICE_FOR_PRODUCT_AND_SALE=select cuantia from Tventa_productos where id_venta = ? and id_producto = ?;

## Returns
SQL_FIND_ALL_RETURNS=select * from tdevoluciones;
SQL_FIND_ALL_RETURNS_BY_SALE_ID=select * from tdevoluciones where id_venta = ?;
SQL_FIND_RETURN_BY_SALE_AND_PRODUCT_IDS=select * from tdevoluciones where id_venta = ? and id_producto = ?;
SQL_ADD_NEW_RETURN=insert into tdevoluciones (id_venta, id_producto, motivo, cantidad_devuelta) values (?, ?, ?, ?);
SQL_UPDATE_RETURN=update tdevoluciones set cantidad_devuelta = ?, motivo = ? where id = ?;

#Users
SQL_FIND_USER_BY_USERNAME=select * from tusuarios where username = ?;
SQL_FIND_USER_TYPE_BY_ID=select id from (select id from TUsuarios except select id from TVendedores) as id where id = ?;

#PaymentMethods
SQL_GET_BIGGEST_ID_PAYMENT_METHODS=SELECT ID FROM TMETODOS_DE_PAGO ORDER BY ID DESC LIMIT 1;
SQL_ADD_PAYMENT_METHOD=INSERT INTO TMETODOS_DE_PAGO (ID) values (?);
SQL_FIND_CASH_BY_ID=select * from TEFECTIVOS where id = ?;
SQL_FIND_CREDIT_CARD_BY_ID=select * from TTARJETAS_DE_CREDITO where id = ?;
SQL_FIND_TRANSFERENCE_BY_ID=select * from TTRANSFERENCIAS_BANCARIAS where id = ?;

#PaymentMethods: Cash
SQL_ADD_CASH_PAYMENT_METHOD=INSERT INTO TEFECTIVOS (ID) values (?);

#PaymentMethods: Transfer
SQL_ADD_TRANSFER_PAYMENT_METHOD=INSERT INTO TTRANSFERENCIAS_BANCARIAS (ID, CUENTA_CARGO, CUENTA_DESTINO, BENEFICIARIO, CONCEPTO, ANOTACIONES) values (?,?,?,?,?,?);

#PaymentMethods: Credit Card
SQL_ADD_CREDIT_CARD_PAYMENT_METHOD=INSERT INTO TTARJETAS_DE_CREDITO (ID, NOMBRE_TITULAR, CVV, FECHA_EXPIRACION, NUMERO) values (?,?,?,?,?);